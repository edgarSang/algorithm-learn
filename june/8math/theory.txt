1. 나머지연산
    -(A+B)%C = ((A%c))+((B%c))%C
    -다이나믹 문제를 풀때 경우의 수가 너무 큰 문제가 있을경우가 있다.
    (int,long long)을 넘어갈경우 BIG INTEGER를 구현해야하지만,
    몇으로 나눈 나머지를 출력해라 라고 할때가 많습니다.

2.최대 공약수 Greatest Commonk Divisor
    -최대 공약수가 1인경우 서로소이다
    int g = 1;
    for(int i=2; i<=min(a,b); i++) {
        if(a % i == 0 && b % i ==0) {
            g = i;
        }
    } // O(n);
    -좀더 빠른 방법이 있는데 , "유클리드 호제법" 을이용하는것이다.
    GCD(a,b) = gcd(b,a%b)
    -24 16
     16 8
      8 0
    int gcd(int a, int b) {
        if(b == 0) {
            return a;
        } else {
            return gcd(b, a%b);
        }
    }
    -n=3 일떄 gcd(a,gcd(b,c))

3.최소공배수
    -LCM 이라고한다.
    -두수의 공배수중에 가장적은수
    -GCD 응용가능
    -두수 최대공약수를 g라고 했을때, 최소공배수 l=g*(a/g)*(b/g) 이다.

4.진법 변환
    - 10진법 수 N을 b진법으로 바꾸려면 n이 0이 될댸 까지 나머지를 계속해서 구하라.
    - B진법 수 N을 10진수로 바꾸려면 B^k을 곱하면서 더해가면된다.
    - 뒤에서 부터 바꾸는것보다 앞에서부터 바꾸는게 조금더 쉽다.
    - 2진수를 8로 2->10-> (x)
    - 8진수를 2진수로 563 => 101 110 011
    - -2진수 =>나머지가 음수로 나오면 안된다.
    - 마지막 진법 변환
        - A->B 는 A-> 10 ->B 형태로 가야한다.

5.소수(중요)
    -약수가 자기자신과 1인수.
    -N이 소수가 되려면 2보다 크거나같고, N-1보다 작거나 같은 자연수로 
    나누어 떨어지면 안된다.

    bool prime(int n) {
        if (n < 2) {
            return false;
        }
        for (int i=2; i<=n-1; i++){ //i*i<=n;
            if(n % i == 0) {
                return false;
            }
        }
        return true;
    }
    - 더 빠른방법은 루트 n 까지만 나눠보는방법이다. O(vN)
    - 만약 1~10000000 모든 소수를 걸리는데 구하는 시간복잡도는?
    O(n*vn)이다, 이보다 더 빠른방법은?
    - 에라 토스테네스의 체
        - 1부터 N까지 범위안에 들어가는 모든 소수를 구하려면 이걸 사용하는게 낫다.
        1. 2부터 n까지 모든수를 써넣는다.
        2. 아직 지워지지 않은 수중에서 가장 작은 수를 찾는다.
        3. 그 수는 소수이다.
        4. 그수의 배수를 모두 지운다 O(n loglog n)

    -골드 바흐의 추측
        -2보다 큰 모든 짝수는 두 소수의 합으로 표현가능함
        -우의 문장에 3을 더하면
        -5보다 큰 모든 홀수는 세소의 합으로 표현가능하다로 바뀐다.
        -아직 증명x
        -10^18 이하에서는 참이다.

6.소인수 분해
    -정수 N을 소수의 곱으로 분해
    -소수를 구하지 않고도 해결가능
    -n을 소인수 분해 했을떄 나타날수 있는 인수중에서 가장 큰 값은 루트N이다
    -따라서, 2부터 루트N까지 For문을 돌면서
    -N을 나눌 수 있으면, 나눌수 없을때까지 계속해서 나누면된다.
    for (int i=2; i*i <= n; i++) {
        while(n%i ==0) {
            printf("%d\n", i);
            n /= i;
        }
    }
    if(n>1){
        printf("%d\n", n);
    }

8.팩토리얼
    -N! = 1 x 2 x .... x n
    -팩토리얼은 매우큰값 보통 10!까지 정도가 다뤄짐
------------------------------------------
문제목록
1.10430,
2.2609,1934,9613
4.11005,2745,1373,1212,2089
5.1978,1929
6. 6588 
7. 11653
8. 10872,1676,2004